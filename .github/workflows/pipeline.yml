name: pipeline
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.4'
      - name: install required packages
        run: |
          go get -u golang.org/x/tools/cmd/goimports
      - name: goimports
        run: test -z "$(set -o pipefail && $(go env GOPATH)/bin/goimports -l . | tee goimports.out)" || { cat goimports.out && exit 1; }
      - name: Open this to see how to fix goimports if it fails
        run: echo Run goimports -w .
        if: failure()
      - name: gofmt
        run: test -z "$(set -o pipefail && gofmt -l . | tee gofmt.out)" || { cat gofmt.out && exit 1; }
      - name: Open this to see how to fix gofmt if it fails
        run: echo Run gofmt -w .
        if: failure()
      - name: Run Unit Tests
        run: go test -v ./...
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            hargeon/videocmprs
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}}
